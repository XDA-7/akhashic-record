use chunk_writer::Image;

fn main() {
    let known_valid_compression_code = vec![
        0x84, 0x8F, 0xA9,
        0xCB, 0xED, 0x0F, 0xA3, 0x9C, 0xB4, 0xDA, 0x8B, 0xB3, 0xDE, 0xBC, 0xFB, 0x0F, 0x86, 0xE2, 0x48,
        0x3E, 0xC2, 0x89, 0xA6, 0x65, 0x96, 0xB6, 0xC2, 0x8A, 0xB9, 0x2A, 0x6C, 0xC9, 0x28, 0xBD, 0x9C,
        0x8C, 0x3D, 0x2B, 0xBA, 0xD8, 0x43, 0xF0, 0x6E, 0x3E, 0xE2, 0x47, 0x96, 0x18, 0xFE, 0x0E, 0x48,
        0x0F, 0x8F, 0xA9, 0x5C, 0x3E, 0x39, 0xD1, 0xAA, 0xF5, 0xB5, 0xB9, 0x6A, 0xA7, 0xD9, 0xAD, 0x77,
        0x49, 0xFD, 0x6A, 0x41, 0xE2, 0x31, 0x39, 0x1A, 0x48, 0xAB, 0xD3, 0xD5, 0xD1, 0x70, 0x0D, 0x57,
        0x0F, 0x49, 0xBC, 0xB8, 0x3D, 0xC0, 0x0D, 0xD9, 0xEE, 0x77, 0x9B, 0x5B, 0xC6, 0xC7, 0xE7, 0xE7,
        0x54, 0x17, 0x28, 0x98, 0x47, 0x61, 0x65, 0x78, 0x18, 0x95, 0x88, 0xB6, 0xC8, 0x38, 0x37, 0x51,
        0x05, 0x19, 0x89, 0x68, 0xF2, 0x58, 0x19, 0xD7, 0x36, 0x99, 0xA9, 0xB9, 0xC6, 0x29, 0x41, 0xF9,
        0x09, 0x17, 0x1A, 0x31, 0x4A, 0x2A, 0xD7, 0xD8, 0xA9, 0x94, 0x0A, 0xBA, 0x2A, 0xEA, 0x99, 0x6A,
        0x0A, 0xA1, 0xE8, 0x6A, 0x15, 0x53, 0x38, 0x7B, 0xC9, 0x02, 0x48, 0x3A, 0xA8, 0xE7, 0x5B, 0x09,
        0x1C, 0x2C, 0x6C, 0xC8, 0xDB, 0xF1, 0x76, 0x8C, 0xDC, 0xD5, 0x6A, 0x47, 0x1B, 0x56, 0x06, 0xAD,
        0x21, 0x8D, 0x4B, 0x58, 0x3D, 0x5D, 0x83, 0x7D, 0x15, 0xBD, 0x0D, 0x4B, 0x0D, 0x6C, 0x0D, 0xC0,
        0xAC, 0xDD, 0x92, 0xA4, 0x74, 0x6E, 0x7E, 0x06, 0x06, 0x25, 0x99, 0x8E, 0x15, 0xBC, 0x83, 0x9E,
        0x03, 0x8F, 0xD3, 0xDE, 0x64, 0x1F, 0x4B, 0x9C, 0x8F, 0xB9, 0xCF, 0xDF, 0xE0, 0xEE, 0x9F, 0xC0,
        0x81, 0x04, 0x0B, 0x1A, 0x3C, 0x88, 0x30, 0xA1, 0xC2, 0x85, 0x22, 0x0A, 0x00,
    ];
    let decoding = lzw::decode_from_little_endian(&known_valid_compression_code, 2, 2);
    println!("{:?}",decoding);
    println!("{}",decoding.len());
    /*let mut colour_image = image::ColorImage::new(64, 32, image::RGB { red: 0, green: 0, blue: 0 });
    for i in 0..64 {
        for j in 0..32 {
            colour_image.set_pixel(i, j, image::RGB { red: 120, green: 0, blue: 150 });
        }
    }
    let writer = chunk_writer::gif::GifImage { image: colour_image };
    writer.write("test.gif").unwrap();*/
}
